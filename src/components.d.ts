/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface RjSideDrawer {
        "open": () => Promise<void>;
        "opened": boolean;
        "titlename": string;
    }
    interface RjSimpleModal {
        "close": () => Promise<void>;
        "open": () => Promise<void>;
        "opened": boolean;
    }
    interface RjSimpleTooltip {
        "show": boolean;
        "text": string;
    }
    interface RjStockFinder {
    }
    interface RjStockPrice {
        "stockSymbol": string;
    }
    interface RjTodoList {
        "listName": string;
    }
    interface TodoItem {
        "itemIndex": number;
        "itemName": string;
        "itemStatus": boolean;
    }
}
declare global {
    interface HTMLRjSideDrawerElement extends Components.RjSideDrawer, HTMLStencilElement {
    }
    var HTMLRjSideDrawerElement: {
        prototype: HTMLRjSideDrawerElement;
        new (): HTMLRjSideDrawerElement;
    };
    interface HTMLRjSimpleModalElement extends Components.RjSimpleModal, HTMLStencilElement {
    }
    var HTMLRjSimpleModalElement: {
        prototype: HTMLRjSimpleModalElement;
        new (): HTMLRjSimpleModalElement;
    };
    interface HTMLRjSimpleTooltipElement extends Components.RjSimpleTooltip, HTMLStencilElement {
    }
    var HTMLRjSimpleTooltipElement: {
        prototype: HTMLRjSimpleTooltipElement;
        new (): HTMLRjSimpleTooltipElement;
    };
    interface HTMLRjStockFinderElement extends Components.RjStockFinder, HTMLStencilElement {
    }
    var HTMLRjStockFinderElement: {
        prototype: HTMLRjStockFinderElement;
        new (): HTMLRjStockFinderElement;
    };
    interface HTMLRjStockPriceElement extends Components.RjStockPrice, HTMLStencilElement {
    }
    var HTMLRjStockPriceElement: {
        prototype: HTMLRjStockPriceElement;
        new (): HTMLRjStockPriceElement;
    };
    interface HTMLRjTodoListElement extends Components.RjTodoList, HTMLStencilElement {
    }
    var HTMLRjTodoListElement: {
        prototype: HTMLRjTodoListElement;
        new (): HTMLRjTodoListElement;
    };
    interface HTMLTodoItemElement extends Components.TodoItem, HTMLStencilElement {
    }
    var HTMLTodoItemElement: {
        prototype: HTMLTodoItemElement;
        new (): HTMLTodoItemElement;
    };
    interface HTMLElementTagNameMap {
        "rj-side-drawer": HTMLRjSideDrawerElement;
        "rj-simple-modal": HTMLRjSimpleModalElement;
        "rj-simple-tooltip": HTMLRjSimpleTooltipElement;
        "rj-stock-finder": HTMLRjStockFinderElement;
        "rj-stock-price": HTMLRjStockPriceElement;
        "rj-todo-list": HTMLRjTodoListElement;
        "todo-item": HTMLTodoItemElement;
    }
}
declare namespace LocalJSX {
    interface RjSideDrawer {
        "opened"?: boolean;
        "titlename"?: string;
    }
    interface RjSimpleModal {
        "opened"?: boolean;
    }
    interface RjSimpleTooltip {
        "show"?: boolean;
        "text"?: string;
    }
    interface RjStockFinder {
        "onRjSymbolSelected"?: (event: CustomEvent<string>) => void;
    }
    interface RjStockPrice {
        "stockSymbol"?: string;
    }
    interface RjTodoList {
        "listName"?: string;
    }
    interface TodoItem {
        "itemIndex"?: number;
        "itemName"?: string;
        "itemStatus"?: boolean;
        "onRjitemDone"?: (event: CustomEvent<string>) => void;
        "onRjitemRemoved"?: (event: CustomEvent<string>) => void;
    }
    interface IntrinsicElements {
        "rj-side-drawer": RjSideDrawer;
        "rj-simple-modal": RjSimpleModal;
        "rj-simple-tooltip": RjSimpleTooltip;
        "rj-stock-finder": RjStockFinder;
        "rj-stock-price": RjStockPrice;
        "rj-todo-list": RjTodoList;
        "todo-item": TodoItem;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "rj-side-drawer": LocalJSX.RjSideDrawer & JSXBase.HTMLAttributes<HTMLRjSideDrawerElement>;
            "rj-simple-modal": LocalJSX.RjSimpleModal & JSXBase.HTMLAttributes<HTMLRjSimpleModalElement>;
            "rj-simple-tooltip": LocalJSX.RjSimpleTooltip & JSXBase.HTMLAttributes<HTMLRjSimpleTooltipElement>;
            "rj-stock-finder": LocalJSX.RjStockFinder & JSXBase.HTMLAttributes<HTMLRjStockFinderElement>;
            "rj-stock-price": LocalJSX.RjStockPrice & JSXBase.HTMLAttributes<HTMLRjStockPriceElement>;
            "rj-todo-list": LocalJSX.RjTodoList & JSXBase.HTMLAttributes<HTMLRjTodoListElement>;
            "todo-item": LocalJSX.TodoItem & JSXBase.HTMLAttributes<HTMLTodoItemElement>;
        }
    }
}
